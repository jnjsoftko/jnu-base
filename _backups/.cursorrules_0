## Project Structure

```
.
├── .env # environment variables
├── LICENSE
├── README.md # readme
├── install.bat # windows install script
├── install.sh # linux install script
├── package.json # package.json
├── publish.bat # windows publish script
├── publish.sh # linux publish script
├── _backups # backup files
│   └── package_0.json
├── cjs # commonjs build
│   └── index.js
├── docs # documentations
│   ├── cursor # documents with cursor
│   │   └── requirements.md
│   └── team # documents with team
│       └── 기획.md
├── ems # es module build
│   └── index.js
├── src # typescript source code
│   ├── index.ts
│   ├── test
│   │   └── index.ts
│   └── types
│       └── index.ts
└── types # types for build
    ├── index.d.ts
    └── index.d.ts.map
```

## Technology Stack

- language
  - Node.js
  - TypeScript
- IDE
  - Cursor.ai
  - .vscode
  - prettier
- Package Manager
  - npm
- Build Tool
  - SWC
- Basic Package
  - dotenv
  - axios
  - concurrently
  - chokidar

## Code Guidelines

### TypeScript Guidelines
- arrow function 사용
- 함수 개별적으로 export 하지 않고, 파일 하단에 모아서, `export { fun1, fun2, fun3, ... }`
- index.ts 가 있는 경우, 폴더 내의 다른 함수들은 모두 index.ts 에서 export

### 네이밍 컨벤션
naming:
  - Use camelCase for functions and variables
  - Use UPPER_CASE for constants
  - Use kebab-case for file names

#### 문서화
documentation:
  - Add JSDoc comments for functions
  - Add usage examples in comments