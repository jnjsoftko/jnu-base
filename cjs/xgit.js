#!/usr/bin/env node
"use strict";var e;Object.defineProperty(exports,"__esModule",{value:!0});const o=require("./git"),i=require("@octokit/rest"),t=((e=require("yargs"))&&e.__esModule?e:{default:e}).default.usage("Usage: -u <url> -s <keyword>").option("u",{alias:"userName",default:"mooninlearn",describe:"Name of User",type:"string",demandOption:!0}).option("e",{alias:"exec",choices:["createRepo","initRepo","copyRepo","emptyRepo","pushRepo","deleteRepo","makeRepo"],default:"createRepo",describe:"exec command createRepo/inintRepo(create+clone+config)/copyRepo(clone+config)/deleteRepo",type:"string",demandOption:!0}).option("n",{alias:"repoName",describe:"NameOfRepository",type:"string",demandOption:!0}).option("d",{alias:"description",describe:"Description For Repository",type:"string"}).argv,a=(0,o.findGithubAccount)(t.userName),r=new i.Octokit({auth:a.token});switch(t.exec){case"initRepo":(0,o.initRepo)({name:t.repoName,description:t.description},t.userName,a,r);break;case"createRepo":(0,o.createRepo)(r,{name:t.repoName,description:t.description});break;case"copyRepo":(0,o.copyRepo)({name:t.repoName,description:t.description},t.userName,a);break;case"emptyRepo":(0,o.createRepo)(r,{name:t.repoName,description:t.description,auto_init:!1,license_template:void 0});break;case"makeRepo":(0,o.makeRepo)({name:t.repoName,description:t.description},t.userName,a,r);break;case"deleteRepo":(0,o.deleteRepo)(r,t.userName,{name:t.repoName})}