"use strict";var e;Object.defineProperty(exports,"__esModule",{value:!0}),!function(e,t){for(var r in t)Object.defineProperty(e,r,{enumerable:!0,get:t[r]})}(exports,{PLATFORM:function(){return c},TEMPLATES_ROOT:function(){return o},exe:function(){return u},exec:function(){return s},execOptions:function(){return p},getParentDir:function(){return l},initApp:function(){return m},removeApp:function(){return d},tree:function(){return x},zip:function(){return f}});const t=require("child_process"),r=(e=require("path"))&&e.__esModule?e:{default:e},n=require("./builtin"),i=require("./git"),o=`${process.env.DEV_CONFIG_ROOT}/Templates`??"C:/JnJ-soft/Developments/Templates",c="win32"===process.platform?"win":"darwin"===process.platform?"mac":"linux"===process.platform?"linux":process.platform,s=e=>{let r=(0,t.execSync)(e,{encoding:"utf8"});return r?r.toString().trim():""},u=e=>{let t=[];return e.forEach(e=>t.push(s(e))),t},p={encoding:"utf8",shell:"win32"===process.platform?"cmd.exe":"/bin/sh"},l=()=>r.default.dirname((0,t.execSync)("pwd",p).toString().trim()),a=e=>{let r=(0,i.findGithubAccount)(e.userName??""),s=l();"win"===c?console.log("win"):((0,t.execSync)(`cp -r ${o}/ts-swc-npm ${e.repoName}`,p),(0,n.substituteInFile)(`${e.repoName}/package.json`,{"{{name}}":e.repoName??"","{{author}}":`${r.fullName} <${r.email}>`,"{{description}}":e.description??""}),(0,n.substituteInFile)(`${e.repoName}/README.md`,{"{{name}}":e.repoName??"","{{author}}":`${r.fullName} <${r.email}>`,"{{github-id}}":e.userName??"","{{description}}":e.description||"","{{parent-dir}}":s}),(0,t.execSync)(`cd ${e.repoName} && npm install`,p),(0,t.execSync)(`github -e pushRepo -u ${e.userName} -n ${e.repoName} -d "${e.description}"`,p))},d=e=>{(0,t.execSync)(`github -e deleteRepo -u ${e.userName} -n ${e.repoName}`,p),(0,t.execSync)(`rm -rf ${e.repoName}`,p)},m=e=>{switch(e.template){case"node-simple":case"python-pipenv":break;case"ts-swc-npm":a(e)}},f=e=>{if("win"===c){let r=e.excluded?e.excluded.split(",").map(e=>`"${e}"`).join(","):'"*/node_modules/*",".git/*"';(0,t.execSync)(`powershell -Command "Compress-Archive -Path ${e.repoName} -DestinationPath ${e.repoName}.zip -Exclude ${r}"`,p)}else{let r=e.excluded?e.excluded.split(",").map(e=>`"${e}"`).join(" "):'"*/node_modules/*" ".git/*"';(0,t.execSync)(`zip -r ${e.repoName}.zip ${e.repoName} -x ${r}`,p)}},x=e=>{if("win"===c)return"";{console.log("options.excluded: ",e.excluded);let r=e.excluded?`"${e.excluded.split(",").join("|")}"`:'"node_modules|dist|_backups|_drafts|types|docs"',i=`tree -I ${r} --dirsfirst -L 3`;try{console.log("Command: ",i);let e=(0,t.execSync)(i,{encoding:"utf8",stdio:"pipe"});return e&&(0,n.saveFile)("tree.txt",e,{overwrite:!0,newFile:!1}),e||""}catch(e){return console.error("Error executing tree command:",e),""}}};