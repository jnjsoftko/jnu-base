"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),!function(e,r){for(var t in r)Object.defineProperty(e,t,{enumerable:!0,get:r[t]})}(exports,{PLATFORM:function(){return l},TEMPLATES_ROOT:function(){return i},del:function(){return x},exe:function(){return a},exec:function(){return p},execOptions:function(){return s},getCurrentDir:function(){return d},getParentDir:function(){return u},initApp:function(){return $},removeApp:function(){return f},tree:function(){return S},unzip:function(){return y},zip:function(){return g}});const e=require("child_process"),r=/*#__PURE__*/c(require("path")),t=require("./builtin.js"),n=require("./git.js"),o=/*#__PURE__*/c(require("fs"));function c(e){return e&&e.__esModule?e:{default:e}}const i=`${process.env.DEV_CONFIG_ROOT}/Templates`??"C:/JnJ-soft/Developments/Templates",l="win32"===process.platform?"win":"darwin"===process.platform?"mac":"linux"===process.platform?"linux":process.platform,s={encoding:"utf8",shell:"win32"===process.platform?"cmd.exe /d /s /c chcp 65001>nul &&":"/bin/sh"},p=r=>{let t=(0,e.execSync)(r,{encoding:"utf8"});return t?t.toString().trim():""},a=e=>{let r=[];return e.forEach(e=>r.push(p(e))),r},d=()=>"win"===l?(0,e.execSync)("cd",s).toString().trim().replace(/\\/g,"/"):(0,e.execSync)("pwd",s).toString().trim(),u=()=>"win"===l?r.default.dirname((0,e.execSync)("cd",s).toString().trim().replace(/\\/g,"/")):r.default.dirname((0,e.execSync)("pwd",s).toString().trim()),m=r=>{let o=(0,n.findGithubAccount)(r.userName??""),c=u(),p=d(),a="";a="win"===l?`xcopy "${i}\\ts-swc-npm" "${r.repoName}\\" /E /I /H /Y`:`cp -r ${i}/ts-swc-npm ${r.repoName}`,(0,e.execSync)(a,s),(0,t.substituteInFile)(`${r.repoName}/package.json`,{"{{name}}":r.repoName??"","{{author}}":`${o.fullName} <${o.email}>`,"{{description}}":r.description??""}),(0,t.substituteInFile)(`${r.repoName}/README.md`,{"{{name}}":r.repoName??"","{{project-name}}":r.repoName??"","{{author}}":`${o.fullName} <${o.email}>`,"{{github-id}}":r.userName??"","{{description}}":r.description||"","{{parent-dir}}":c,"{{current-dir}}":p}),(0,t.substituteInFile)(`${r.repoName}/docs/workflow.md`,{"{{name}}":r.repoName??"","{{project-name}}":r.repoName??"","{{github-id}}":r.userName??"","{{description}}":r.description||"","{{parent-dir}}":c,"{{current-dir}}":p}),console.log(a=`cd ${p}/${r.repoName} && npm install`),(0,e.execSync)(a,s),console.log(a=`cd ${p}/${r.repoName} && xgit -e makeRepo -u ${r.userName} -n ${r.repoName} -d "${r.description}"`),(0,e.execSync)(a,s)},f=r=>{(0,e.execSync)(`xgit -e deleteRemoteRepo -u ${r.userName} -n ${r.repoName}`,s),"win"===l?(0,e.execSync)(`rmdir /s /q ${r.repoName}`,s):(0,e.execSync)(`rm -rf ${r.repoName}`,s)},$=e=>{switch(e.template){case"node-simple":case"python-pipenv":break;case"ts-swc-npm":m(e)}},x=e=>{(0,t.deleteFilesInFolder)(e.repoName??"",e.excluded??"",!0)},g=r=>{if("win"===l)try{let t=`${r.repoName}_temp`;for(let n of((0,e.execSync)(`xcopy "${r.repoName}" "${t}\\" /E /I /H /Y`,s),r.excluded?r.excluded.split(","):["node_modules","package-lock.json","package.json"])){let r=`${t}/${n}`;try{n.includes("/")?(0,e.execSync)(`rmdir /s /q "${r}"`,s):(0,e.execSync)(`del /q "${r}"`,s)}catch(e){console.log(`Warning: Could not remove ${n}`)}}(0,e.execSync)(`powershell -Command "Compress-Archive -Path ${t}/* -DestinationPath ${r.repoName}.zip -Force"`,s),(0,e.execSync)(`rmdir /s /q "${t}"`,s)}catch(e){throw console.error("Error during zip operation:",e),e}else{let t=r.excluded?r.excluded.split(",").map(e=>`"${e}"`).join(" "):'"*/node_modules/*" ".git/*"';(0,e.execSync)(`zip -r ${r.repoName}.zip ${r.repoName} -x ${t}`,s)}},y=(n,c="__MACOSX/,node_modules/,.DS_Store,.git/")=>{let i=d(),l=[];for(let p of(0,t.findFiles)(n,"*.zip"))try{let n;let a=`${i}/_unzip/${r.default.parse(p).name}`;if(console.log(`## extractPath: ${a}`),(0,t.makeDir)(a),"win32"===process.platform)for(let t of(n=`powershell -command "Expand-Archive -Path '${p}' -DestinationPath '${a}' -Force"`,c.split(",").map(e=>e.trim()))){let n=r.default.join(a,t.replace("/",""));t.endsWith("/")?(0,e.execSync)(`if exist "${n}" rmdir /s /q "${n}"`,s):(0,e.execSync)(`if exist "${n}" del /q "${n}"`,s)}else{let e=c.split(",").map(e=>`"${e.trim()}"`).join(" ");n=`unzip -o "${p}" -d "${a}" -x ${e}`}(0,e.execSync)(n),console.log(`압축 해제 완료: ${p} -> ${a}`);let d=(0,t.findFolders)(a).filter(e=>!e.includes("__MACOSX"));if(console.log(`### subFolders: ${d}, subFolders.length: ${d.length}, ${d[0]}`),1===d.length&&d[0].replace(a,"").includes(r.default.parse(p).name)){for(let t of(console.log(`### 중복 폴더 처리 필요: ${d}`),o.default.readdirSync(d[0]))){let n=r.default.join(d[0],t),o=r.default.join(a,t);"win32"===process.platform?(0,e.execSync)(`move "${n}" "${o}"`,s):(0,e.execSync)(`mv "${n}" "${o}"`,s)}"win32"===process.platform?(0,e.execSync)(`rmdir /s /q "${d[0]}"`,s):(0,e.execSync)(`rm -rf "${d[0]}"`,s)}l.push(a)}catch(e){console.error(`'${p}' 압축 해제 중 오류 발생:`,e.message)}return(0,t.deleteFilesInFolder)(i,"__MACOSX/",!0),l.join(",")},S=r=>{{if("win"===l){let n=r.excluded?r.excluded.split(",").join("|"):"node_modules|dist|_backups|_drafts|types|docs";try{let r=`powershell -NoProfile -ExecutionPolicy Bypass -Command "$OutputEncoding = [Console]::OutputEncoding = [Text.Encoding]::UTF8; tree /F /A | Select-String -NotMatch '${n}'"`;console.log("Command: ",r);let o=(0,e.execSync)(r,{encoding:"utf8",stdio:"pipe"});return console.log("Result: ",o),o&&(0,t.saveFile)("tree.txt",o,{overwrite:!0,newFile:!1,encoding:"utf8"}),o||""}catch(e){return console.error("Error executing tree command:",e),""}}let n=r.excluded?`"${r.excluded.split(",").join("|")}"`:'"node_modules|dist|_backups|_drafts|types|docs"',o=`tree -I ${n} --dirsfirst -L 3`;try{console.log("Command: ",o);let r=(0,e.execSync)(o,{encoding:"utf8",stdio:"pipe"});return r&&(0,t.saveFile)("tree.txt",r,{overwrite:!0,newFile:!1}),r||""}catch(e){return console.error("Error executing tree command:",e),""}}};