#!/usr/bin/env node
"use strict";Object.defineProperty(exports,"__esModule",{value:!0});const e=/*#__PURE__*/r(require("yargs")),t=require("child_process"),i=/*#__PURE__*/r(require("path")),o=require("./basic"),n=require("./builtin"),s=require("./github");function r(e){return e&&e.__esModule?e:{default:e}}/*#__PURE__*/r(require("dotenv")).default.config();const a=process.env.ENV_TEMPLATES_PATH??"C:/JnJ-soft/Developments/_Templates",c=e.default.usage("Usage: -u <url> -s <keyword>").option("u",{alias:"userName",default:"mooninlearn",describe:"Name of User",type:"string",demandOption:!0}).option("l",{alias:"lang",default:"node",describe:"developemnt language",type:"string"}).option("n",{alias:"repoName",describe:"NameOfRepository",type:"string",demandOption:!0}).option("d",{alias:"description",describe:"Description For Repository",type:"string"}).option("g",{alias:"github",default:!0,describe:"Use Github Repository",type:"boolean"}).option("t",{alias:"template",default:"none-basic-ts",describe:"App Template",type:"string"}).parseSync(),l={userName:c.u,lang:c.l,repoName:c.n,description:c.d,github:c.g,template:c.t},p=(e,t,i)=>i={...i,repository:{type:"git",url:`git+https://${e}@github.com/${e}/${t}.git`},bugs:{url:`https://github.com/${e}/${t}/issues`},homepage:`https://github.com/${e}/${t}#readme`},u={encoding:"utf8",shell:"win32"===process.platform?"cmd.exe":"/bin/sh"};switch(l.github&&(console.log("## init github"),(e=>{let{userName:i,repoName:o,description:n}=e,s=`github -u ${i} -e initRepo -n ${o} -d "${n}"`;(0,t.execSync)(s)})(l),(0,o.sleep)(1)),l.lang.toUpperCase()){case"NODE":(e=>{let{userName:o,repoName:r,description:c,template:l,github:d}=e,{fullName:g,email:m,token:f}=(0,s.findGithubAccount)(o),b=i.default.join(a,`node/${l}`),h=i.default.join(process.cwd(),`${r}`);(0,n.copyDir)(b,h);let $=i.default.join(process.cwd(),`${r}/package.json`),y=(0,n.loadJson)($);y={...y,name:r,version:"0.0.1",description:c,author:`${g} <${m}>`},d&&(y=p(o,r,y)),(0,n.saveJson)($,y);let _=(process.platform,`cd "${h}" && npm install`);if((0,t.execSync)(_,u),l.includes("-figma-")){let e=i.default.join(process.cwd(),`${r}/dist/manifest.json`),t=(0,n.loadJson)(e);t={...t,name:r,id:`1${(e=>{let t="";for(let e=0;e<17;e++)t+=Math.floor(10*Math.random());return t})(0)}`},(0,n.saveJson)(e,t)}let j=(process.platform,`git init && git config user.name "${g}" && git config user.email "${m}" && git remote add origin https://${f}@github.com/${o}/${r}.git`);console.log("#### ",j),(0,t.execSync)(j,u);let x='git add . && git commit -m "Initial commit"';console.log("#### ",x),(0,t.execSync)(x,u);let v=(0,t.execSync)("git branch",u);v.includes("main")?(0,t.execSync)("git push -u origin main",u):v.includes("master")?(0,t.execSync)("git push -u origin master",u):console.log("main 또는 master 브랜치가 없습니다.")})(l);break;case"PYTHON":(e=>{let{userName:o,repoName:r,description:c,template:l,github:p}=e,{fullName:u,email:d}=(0,s.findGithubAccount)(o),g=i.default.join(a,`python/${l}`),m=i.default.join(process.cwd(),`${r}`);(0,n.copyDir)(g,m);let f=i.default.join(process.cwd(),`${r}/setup.cfg`),b={" ":"_0_","<":"_1_",">":"_2_"},h=[];for(let[e,t]of Object.entries({name:r,description:c,author:`${u} <${d}>`})){for(let[e,i]of Object.entries(b))"string"==typeof t&&(t=t.replace(RegExp(e,"g"),i));"string"==typeof t&&h.push(`'${e}':'${t}'`)}let $="{"+h.join(",")+"}";(0,t.execSync)(`config.exe -a update_cfg -s ${f} -D ${$}`);let y=(0,n.loadFile)(f);for(let[e,t]of Object.entries(b))y=y.replace(RegExp(t,"g"),e);(0,n.saveFile)(f,y)})(l)}