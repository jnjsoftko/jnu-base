"use strict";var e;Object.defineProperty(exports,"__esModule",{value:!0}),!function(e,t){for(var i in t)Object.defineProperty(e,i,{enumerable:!0,get:t[i]})}(exports,{Github:function(){return a},findGithubAccount:function(){return u}});const t=require("child_process"),i=require("@octokit/rest"),o=(e=require("dotenv"))&&e.__esModule?e:{default:e},s=require("./builtin.js"),n=require("./basic.js");function c(e,t,i){return t in e?Object.defineProperty(e,t,{value:i,enumerable:!0,configurable:!0,writable:!0}):e[t]=i,e}o.default.config();const r=process.env.DEV_SETTINGS??"C:/JnJ-soft/Developments/_Settings",u=e=>(0,s.loadJson)(`${r}/Apis/github.json`)[e];class a{constructor(e){c(this,"userName",void 0),c(this,"account",void 0),c(this,"octokit",void 0),c(this,"findAllRepos",()=>{console.log(this.octokit.rest.repos)}),c(this,"createRepo",e=>{this.octokit.rest.repos.createForAuthenticatedUser({auto_init:!0,private:!1,license_template:"MIT",...e})}),c(this,"cloneRepo",e=>{let i=`git clone https://github.com/${this.userName}/${e.name}.git`;console.log(i),(0,t.execSync)(i)}),c(this,"changeRepo",e=>{let i=`cd ${e.name} && git remote remove origin`;console.log(i+=` && git remote add origin https://github.com/${this.userName}/${e.name}`),(0,t.execSync)(i)}),c(this,"setConfigRepo",e=>{let i=`cd ${e.name} && git config user.name "${this.account.fullName}"`;console.log(i+=` && git config user.email "${this.account.email}" && git remote set-url origin https://${this.account.token}@github.com/${this.userName}/${e.name}.git`),(0,t.execSync)(i)}),c(this,"copyRepo",e=>{this.cloneRepo(e),this.setConfigRepo(e)}),c(this,"initRepo",e=>{this.createRepo(e);let t=this;setTimeout(()=>{t.cloneRepo(e),t.setConfigRepo(e)},5e3)}),c(this,"pushRepo",e=>{let{name:i}=e,{fullName:o,email:s,token:c}=this.account;(0,n.sleep)(3);let r="git init";console.log(r+=` && git config user.name "${o}" && git config user.email "${s}" && git remote add origin https://${c}@github.com/${this.userName}/${i}.git`),(0,t.execSync)(r),console.log(r='git add . && git commit -m "Initial commit"'),(0,t.execSync)(r);let u=(0,t.execSync)("git branch");u.includes("main")?(0,t.execSync)("git push -u origin main"):u.includes("master")?(0,t.execSync)("git push -u origin master"):console.log("main 또는 master 브랜치가 없습니다.")}),c(this,"deleteRepo",e=>{let{name:t}=e;this.octokit.rest.repos.delete({owner:this.userName,repo:t})}),this.userName=e,this.account=u(e),this.octokit=new i.Octokit({auth:this.account.token})}}