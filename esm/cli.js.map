{"version":3,"sources":["../src/cli.ts"],"sourcesContent":["import { execSync, ExecSyncOptionsWithStringEncoding } from 'child_process';\nimport Path from 'path';\nimport { sleep } from './basic.js';\nimport {\n  composeHangul,\n  makeDir,\n  copyDir,\n  loadJson,\n  saveJson,\n  loadFile,\n  saveFile,\n  findFiles,\n  deleteFilesInFolder,\n  renameFilesInFolder,\n  substituteInFile,\n} from './builtin.js';\nimport { findGithubAccount } from './git.js';\nimport type { ExecResult, ExecResults, CliOptions } from './types.js';\nimport fs from 'fs';\n\n// & Variables AREA\n// &---------------------------------------------------------------------------\nconst TEMPLATES_ROOT = `${process.env.DEV_CONFIG_ROOT}/Templates` ?? 'C:/JnJ-soft/Developments/Templates';\nconst PLATFORM =\n  process.platform === 'win32'\n    ? 'win'\n    : process.platform === 'darwin'\n    ? 'mac'\n    : process.platform === 'linux'\n    ? 'linux'\n    : process.platform;\n\n// Windows 실행 옵션에 코드페이지 변경 명령 추가\nconst execOptions: ExecSyncOptionsWithStringEncoding = {\n  encoding: 'utf8',\n  shell:\n    process.platform === 'win32'\n      ? 'cmd.exe /d /s /c chcp 65001>nul &&' // UTF-8 코드페이지 설정\n      : '/bin/sh',\n};\n\n// & Functions AREA\n// &---------------------------------------------------------------------------\n\n// * Command Execution Functions\n/**\n * 단일 명령어 실행\n * @param cmd 실행할 명령어\n * @returns 명령어 실행 결과\n *\n * @example\n * ```ts\n * exec('ls -la') // 디렉토리 목록 출력\n * exec('echo \"Hello\"') // 'Hello'\n * exec('pwd') // 현재 작업 디렉토리 경로\n * ```\n */\nconst exec = (cmd: string): ExecResult => {\n  const result = execSync(cmd, { encoding: 'utf8' });\n  return result ? result.toString().trim() : '';\n};\n\n/**\n * 여러 명령어 순차 실행\n * @param cmds 실행할 명령어 배열\n * @returns 각 명령어의 실행 결과 배열\n *\n * @example\n * ```ts\n * exe(['pwd', 'ls -la']) // [현재 경로, 디렉토리 목록]\n * exe(['echo \"Hello\"', 'echo \"World\"']) // ['Hello', 'World']\n * ```\n */\nconst exe = (cmds: string[]): ExecResults => {\n  const results: string[] = [];\n  cmds.forEach((cmd) => results.push(exec(cmd)));\n  return results;\n};\n\n/**\n * 현재 디렉토리 경로 반환\n */\nconst getCurrentDir = (): string => {\n  switch (PLATFORM) {\n    case 'win':\n      return execSync('cd', execOptions).toString().trim().replace(/\\\\/g, '/');\n    default:\n      return execSync('pwd', execOptions).toString().trim();\n  }\n};\n\n/**\n * 현재 디렉토리의 부모 디렉토리 경로 반환\n */\nconst getParentDir = (): string => {\n  switch (PLATFORM) {\n    case 'win':\n      return Path.dirname(execSync('cd', execOptions).toString().trim().replace(/\\\\/g, '/'));\n    default:\n      return Path.dirname(execSync('pwd', execOptions).toString().trim());\n  }\n};\n\n\n// * Main Functions\n// &---------------------------------------------------------------------------\n/**\n * TypeScript + SWC + NPM 프로젝트 초기화\n */\nconst initTsSwcNpm = (options: CliOptions) => {\n  const account = findGithubAccount(options.userName ?? '');\n  const parentDir = getParentDir();\n  const currentDir = getCurrentDir();\n\n  let cmd = '';\n\n  if (PLATFORM === 'win') {\n    cmd = `xcopy \"${TEMPLATES_ROOT}\\\\ts-swc-npm\" \"${options.repoName}\\\\\" /E /I /H /Y`;\n    execSync(cmd, execOptions);\n  } else {\n    cmd = `cp -r ${TEMPLATES_ROOT}/ts-swc-npm ${options.repoName}`;\n    execSync(cmd, execOptions);\n  }\n\n  substituteInFile(`${options.repoName}/package.json`, {\n    '{{name}}': options.repoName ?? '',\n    '{{author}}': `${account.fullName} <${account.email}>`,\n    '{{description}}': options.description ?? '',\n  });\n\n  substituteInFile(`${options.repoName}/README.md`, {\n    '{{name}}': options.repoName ?? '',\n    '{{project-name}}': options.repoName ?? '',\n    '{{author}}': `${account.fullName} <${account.email}>`,\n    '{{github-id}}': options.userName ?? '',\n    '{{description}}': options.description || '',\n    '{{parent-dir}}': parentDir,\n    '{{current-dir}}': currentDir,\n  });\n\n  substituteInFile(`${options.repoName}/docs/workflow.md`, {\n    '{{name}}': options.repoName ?? '',\n    '{{project-name}}': options.repoName ?? '',\n    '{{github-id}}': options.userName ?? '',\n    '{{description}}': options.description || '',\n    '{{parent-dir}}': parentDir,\n    '{{current-dir}}': currentDir,\n  });\n\n  cmd = `cd ${currentDir}/${options.repoName} && npm install`;\n  console.log(cmd);\n  execSync(cmd, execOptions);\n  cmd = `cd ${currentDir}/${options.repoName} && xgit -e makeRepo -u ${options.userName} -n ${options.repoName} -d \"${options.description}\"`;\n  console.log(cmd);\n  execSync(cmd, execOptions);\n};\n\n/**\n * 앱 제거 (로컬 + 원격 저장소)\n */\nconst removeApp = (options: CliOptions) => {\n  execSync(`xgit -e deleteRemoteRepo -u ${options.userName} -n ${options.repoName}`, execOptions);\n  if (PLATFORM === 'win') {\n    execSync(`rmdir /s /q ${options.repoName}`, execOptions);\n  } else {\n    execSync(`rm -rf ${options.repoName}`, execOptions);\n  }\n};\n\n/**\n * 템플릿 기반 앱 초기화\n */\nconst initApp = (options: CliOptions) => {\n  switch (options.template) {\n    case 'node-simple':\n      break;\n    case 'ts-swc-npm':\n      initTsSwcNpm(options);\n      break;\n    case 'python-pipenv':\n      break;\n    case 'flutter':\n      break;\n  }\n};\n\n// /**\n//  * 폴더, 파일 삭제\n//  */\n// const del = (options: CliOptions) => {\n//   if (PLATFORM === 'win') {\n//     execSync(`rmdir /s /q ${options.repoName}`, execOptions);\n//   } else {\n//     execSync(`rm -rf ${options.repoName}`, execOptions);\n//   }\n// };\n\n\n/**\n * 폴더, 파일 삭제\n */\nconst del = (options: CliOptions) => {\n  deleteFilesInFolder(options.repoName ?? '', options.excluded ?? '', true);\n};\n\n/**\n * 로컬 프로젝트 압축\n */\nconst zip = (options: CliOptions) => {\n  switch (PLATFORM) {\n    case 'win':\n      try {\n        // 1. 임시 디렉토리 생성\n        const tempDir = `${options.repoName}_temp`;\n        execSync(`xcopy \"${options.repoName}\" \"${tempDir}\\\\\" /E /I /H /Y`, execOptions);\n\n        // 2. 제외할 파일/폴더 삭제\n        const excludedItems = options.excluded\n          ? options.excluded.split(',')\n          : ['node_modules', 'package-lock.json', 'package.json'];\n\n        for (const item of excludedItems) {\n          const itemPath = `${tempDir}/${item}`;\n          try {\n            if (item.includes('/')) {\n              execSync(`rmdir /s /q \"${itemPath}\"`, execOptions);\n            } else {\n              execSync(`del /q \"${itemPath}\"`, execOptions);\n            }\n          } catch (err) {\n            console.log(`Warning: Could not remove ${item}`);\n          }\n        }\n\n        // 3. 압축\n        execSync(\n          `powershell -Command \"Compress-Archive -Path ${tempDir}/* -DestinationPath ${options.repoName}.zip -Force\"`,\n          execOptions\n        );\n\n        // 4. 임시 디렉토리 삭제\n        execSync(`rmdir /s /q \"${tempDir}\"`, execOptions);\n      } catch (error) {\n        console.error('Error during zip operation:', error);\n        throw error;\n      }\n      break;\n\n    default:\n      const excluded = options.excluded\n        ? options.excluded\n            .split(',')\n            .map((item) => `\"${item}\"`)\n            .join(' ')\n        : '\"*/node_modules/*\" \".git/*\"';\n      execSync(`zip -r ${options.repoName}.zip ${options.repoName} -x ${excluded}`, execOptions);\n      break;\n  }\n};\n\n/**\n * 디렉토리 내에 있는 모든 압축 파일 해제(zip 파일 이름의 폴더에 압축 해제)\n * @param folderPath 압축 파일이 있는 폴더 경로\n * @example\n * ```ts\n * // 현재 폴더의 모든 zip 파일을 압축 해제\n * unzip('./');\n * ```\n */\nconst unzip = (folderPath: string, excluded: string = '__MACOSX/,node_modules/,.DS_Store,.git/'): string => {\n  // 각 zip 파일에 대해 처리\n  const currentDir = getCurrentDir();\n  const extractPaths: string[] = [];\n  for (const zipPath of findFiles(folderPath, '*.zip')) {\n    try {\n      const extractPath = `${currentDir}/_unzip/${Path.parse(zipPath).name}`;\n      console.log(`## extractPath: ${extractPath}`);\n      makeDir(extractPath);\n\n      // 운영체제에 따른 명령어 설정\n      let command: string;\n      if (process.platform === 'win32') {\n        // Windows\n        command = `powershell -command \"Expand-Archive -Path '${zipPath}' -DestinationPath '${extractPath}' -Force\"`;\n        // 압축 해제 후 제외할 파일/폴더 삭제\n        const excludedItems = excluded.split(',').map(item => item.trim());\n        for (const item of excludedItems) {\n          const itemPath = Path.join(extractPath, item.replace('/', ''));\n          if (item.endsWith('/')) {\n            execSync(`if exist \"${itemPath}\" rmdir /s /q \"${itemPath}\"`, execOptions);\n          } else {\n            execSync(`if exist \"${itemPath}\" del /q \"${itemPath}\"`, execOptions);\n          }\n        }\n      } else {\n        // macOS, Linux - 불필요한 파일/폴더 제외\n        const excludeList = excluded\n          .split(',')\n          .map(item => `\"${item.trim()}\"`)\n          .join(' ');\n        command = `unzip -o \"${zipPath}\" -d \"${extractPath}\" -x ${excludeList}`;\n      }\n\n      // 압축 해제 실행\n      execSync(command);\n      console.log(`압축 해제 완료: ${zipPath} -> ${extractPath}`);\n\n      // 중복 폴더명 처리(!!!! 별도 함수처리 and 로직 단순화)\n      const items = fs.readdirSync(extractPath);\n      if (items.length === 1) {\n        const subPath = Path.join(extractPath, items[0]);\n        if (fs.statSync(subPath).isDirectory()) {\n          const subItems = fs.readdirSync(subPath);\n          // 하위 폴더명이 상위 폴더명과 같은 경우\n          if (items[0] === Path.parse(zipPath).name) {\n            // 하위 폴더의 내용을 상위 폴더로 이동\n            for (const item of subItems) {\n              const srcPath = Path.join(subPath, item);\n              const destPath = Path.join(extractPath, item);\n              if (process.platform === 'win32') {\n                execSync(`move \"${srcPath}\" \"${destPath}\"`, execOptions);\n              } else {\n                execSync(`mv \"${srcPath}\" \"${destPath}\"`, execOptions);\n              }\n            }\n            // 빈 하위 폴더 삭제\n            if (process.platform === 'win32') {\n              execSync(`rmdir /s /q \"${subPath}\"`, execOptions);\n            } else {\n              execSync(`rm -rf \"${subPath}\"`, execOptions);\n            }\n          }\n        }\n      }\n\n      extractPaths.push(extractPath);\n    } catch (err: any) {\n      console.error(`'${zipPath}' 압축 해제 중 오류 발생:`, err.message);\n    }\n  }\n  deleteFilesInFolder(currentDir, '__MACOSX/', true);\n  return extractPaths.join(',');\n};\n\n/**\n * 프로젝트 구조 분석\n */\nconst tree = (options: CliOptions): string => {\n  switch (PLATFORM) {\n    case 'win':\n      const excludedWin = options.excluded\n        ? options.excluded.split(',').join('|')\n        : 'node_modules|dist|_backups|_drafts|types|docs';\n\n      try {\n        // PowerShell 실행 정책 우회 및 단순화된 명령어\n        const cmd = `powershell -NoProfile -ExecutionPolicy Bypass -Command \"$OutputEncoding = [Console]::OutputEncoding = [Text.Encoding]::UTF8; tree /F /A | Select-String -NotMatch '${excludedWin}'\"`;\n        console.log('Command: ', cmd);\n\n        const result = execSync(cmd, {\n          encoding: 'utf8',\n          stdio: 'pipe',\n        });\n\n        console.log('Result: ', result);\n        if (result) {\n          saveFile('tree.txt', result, { overwrite: true, newFile: false, encoding: 'utf8' });\n        }\n\n        return result || '';\n      } catch (error) {\n        console.error('Error executing tree command:', error);\n        return '';\n      }\n\n    default:\n      const excluded = options.excluded\n        ? `\"${options.excluded.split(',').join('|')}\"`\n        : '\"node_modules|dist|_backups|_drafts|types|docs\"';\n\n      const cmd = `tree -I ${excluded} --dirsfirst -L 3`;\n      try {\n        console.log('Command: ', cmd);\n        const result = execSync(cmd, {\n          encoding: 'utf8',\n          stdio: 'pipe',\n        });\n\n        if (result) {\n          saveFile('tree.txt', result, { overwrite: true, newFile: false });\n        }\n\n        return result || '';\n      } catch (error) {\n        console.error('Error executing tree command:', error);\n        return '';\n      }\n  }\n};\n\n// & Export AREA\n// &---------------------------------------------------------------------------\nexport { TEMPLATES_ROOT, PLATFORM, exec, exe, execOptions, getParentDir, getCurrentDir, initApp, removeApp, zip, tree, del, unzip };\n\n// & Test AREA\n// &---------------------------------------------------------------------------\n// console.log(exec(\"dir /w\"));\n// console.log(exec(\"powershell -Command \\\"Get-ChildItem | Format-Wide\\\"\"));\n"],"names":["execSync","Path","makeDir","saveFile","findFiles","deleteFilesInFolder","substituteInFile","findGithubAccount","fs","TEMPLATES_ROOT","process","env","DEV_CONFIG_ROOT","PLATFORM","platform","execOptions","encoding","shell","exec","cmd","result","toString","trim","exe","cmds","results","forEach","push","getCurrentDir","replace","getParentDir","dirname","initTsSwcNpm","options","account","userName","parentDir","currentDir","repoName","fullName","email","description","console","log","removeApp","initApp","template","del","excluded","zip","tempDir","excludedItems","split","item","itemPath","includes","err","error","map","join","unzip","folderPath","extractPaths","zipPath","extractPath","parse","name","command","endsWith","excludeList","items","readdirSync","length","subPath","statSync","isDirectory","subItems","srcPath","destPath","message","tree","excludedWin","stdio","overwrite","newFile"],"mappings":"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"}