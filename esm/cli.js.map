{"version":3,"sources":["../src/cli.ts"],"sourcesContent":["import { execSync, ExecSyncOptionsWithStringEncoding } from 'child_process';\r\nimport Path from 'path';\r\nimport { sleep } from './basic.js';\r\nimport {\r\n  composeHangul,\r\n  makeDir,\r\n  copyDir,\r\n  loadJson,\r\n  saveJson,\r\n  loadFile,\r\n  saveFile,\r\n  substituteInFile,\r\n} from './builtin.js';\r\nimport { findGithubAccount } from './git.js';\r\nimport type { ExecResult, ExecResults, CliOptions } from './types.js';\r\n\r\n// & Variables AREA\r\n// &---------------------------------------------------------------------------\r\nconst TEMPLATES_ROOT = `${process.env.DEV_CONFIG_ROOT}/Templates` ?? 'C:/JnJ-soft/Developments/Templates';\r\nconst PLATFORM =\r\n  process.platform === 'win32'\r\n    ? 'win'\r\n    : process.platform === 'darwin'\r\n    ? 'mac'\r\n    : process.platform === 'linux'\r\n    ? 'linux'\r\n    : process.platform;\r\n\r\n// Windows 실행 옵션에 코드페이지 변경 명령 추가\r\nconst execOptions: ExecSyncOptionsWithStringEncoding = {\r\n  encoding: 'utf8',\r\n  shell:\r\n    process.platform === 'win32'\r\n      ? 'cmd.exe /d /s /c chcp 65001>nul &&' // UTF-8 코드페이지 설정\r\n      : '/bin/sh',\r\n};\r\n\r\n// & Functions AREA\r\n// &---------------------------------------------------------------------------\r\n\r\n// * Command Execution Functions\r\n/**\r\n * 단일 명령어 실행\r\n * @param cmd 실행할 명령어\r\n * @returns 명령어 실행 결과\r\n *\r\n * @example\r\n * ```ts\r\n * exec('ls -la') // 디렉토리 목록 출력\r\n * exec('echo \"Hello\"') // 'Hello'\r\n * exec('pwd') // 현재 작업 디렉토리 경로\r\n * ```\r\n */\r\nconst exec = (cmd: string): ExecResult => {\r\n  const result = execSync(cmd, { encoding: 'utf8' });\r\n  return result ? result.toString().trim() : '';\r\n};\r\n\r\n/**\r\n * 여러 명령어 순차 실행\r\n * @param cmds 실행할 명령어 배열\r\n * @returns 각 명령어의 실행 결과 배열\r\n *\r\n * @example\r\n * ```ts\r\n * exe(['pwd', 'ls -la']) // [현재 경로, 디렉토리 목록]\r\n * exe(['echo \"Hello\"', 'echo \"World\"']) // ['Hello', 'World']\r\n * ```\r\n */\r\nconst exe = (cmds: string[]): ExecResults => {\r\n  const results: string[] = [];\r\n  cmds.forEach((cmd) => results.push(exec(cmd)));\r\n  return results;\r\n};\r\n\r\n/**\r\n * 현재 디렉토리 경로 반환\r\n */\r\nconst getCurrentDir = (): string => {\r\n  switch (PLATFORM) {\r\n    case 'win':\r\n      return execSync('cd', execOptions).toString().trim().replace(/\\\\/g, '/');\r\n    default:\r\n      return execSync('pwd', execOptions).toString().trim();\r\n  }\r\n};\r\n\r\n/**\r\n * 현재 디렉토리의 부모 디렉토리 경로 반환\r\n */\r\nconst getParentDir = (): string => {\r\n  switch (PLATFORM) {\r\n    case 'win':\r\n      return Path.dirname(execSync('cd', execOptions).toString().trim().replace(/\\\\/g, '/'));\r\n    default:\r\n      return Path.dirname(execSync('pwd', execOptions).toString().trim());\r\n  }\r\n};\r\n\r\n/**\r\n * TypeScript + SWC + NPM 프로젝트 초기화\r\n */\r\nconst initTsSwcNpm = (options: CliOptions) => {\r\n  const account = findGithubAccount(options.userName ?? '');\r\n  const parentDir = getParentDir();\r\n  const currentDir = getCurrentDir();\r\n\r\n  let cmd = '';\r\n\r\n  if (PLATFORM === 'win') {\r\n    cmd = `xcopy \"${TEMPLATES_ROOT}\\\\ts-swc-npm\" \"${options.repoName}\\\\\" /E /I /H /Y`;\r\n    execSync(cmd, execOptions);\r\n  } else {\r\n    cmd = `cp -r ${TEMPLATES_ROOT}/ts-swc-npm ${options.repoName}`;\r\n    execSync(cmd, execOptions);\r\n  }\r\n\r\n  substituteInFile(`${options.repoName}/package.json`, {\r\n    '{{name}}': options.repoName ?? '',\r\n    '{{author}}': `${account.fullName} <${account.email}>`,\r\n    '{{description}}': options.description ?? '',\r\n  });\r\n\r\n  substituteInFile(`${options.repoName}/README.md`, {\r\n    '{{name}}': options.repoName ?? '',\r\n    '{{project-name}}': options.repoName ?? '',\r\n    '{{author}}': `${account.fullName} <${account.email}>`,\r\n    '{{github-id}}': options.userName ?? '',\r\n    '{{description}}': options.description || '',\r\n    '{{parent-dir}}': parentDir,\r\n    '{{current-dir}}': currentDir,\r\n  });\r\n\r\n  substituteInFile(`${options.repoName}/docs/workflow.md`, {\r\n    '{{name}}': options.repoName ?? '',\r\n    '{{project-name}}': options.repoName ?? '',\r\n    '{{github-id}}': options.userName ?? '',\r\n    '{{description}}': options.description || '',\r\n    '{{parent-dir}}': parentDir,\r\n    '{{current-dir}}': currentDir,\r\n  });\r\n\r\n  cmd = `cd ${currentDir}/${options.repoName} && npm install`;\r\n  console.log(cmd);\r\n  execSync(cmd, execOptions);\r\n  cmd = `cd ${currentDir}/${options.repoName} && xgit -e makeRepo -u ${options.userName} -n ${options.repoName} -d \"${options.description}\"`;\r\n  console.log(cmd);\r\n  execSync(cmd, execOptions);\r\n};\r\n\r\n/**\r\n * 앱 제거 (로컬 + 원격 저장소)\r\n */\r\nconst removeApp = (options: CliOptions) => {\r\n  execSync(`xgit -e deleteRemoteRepo -u ${options.userName} -n ${options.repoName}`, execOptions);\r\n  if (PLATFORM === 'win') {\r\n    execSync(`rmdir /s /q ${options.repoName}`, execOptions);\r\n  } else {\r\n    execSync(`rm -rf ${options.repoName}`, execOptions);\r\n  }\r\n};\r\n\r\n/**\r\n * 템플릿 기반 앱 초기화\r\n */\r\nconst initApp = (options: CliOptions) => {\r\n  switch (options.template) {\r\n    case 'node-simple':\r\n      break;\r\n    case 'ts-swc-npm':\r\n      initTsSwcNpm(options);\r\n      break;\r\n    case 'python-pipenv':\r\n      break;\r\n    case 'flutter':\r\n      break;\r\n  }\r\n};\r\n\r\n/**\r\n * 로컬 프로젝트 압축\r\n */\r\nconst zip = (options: CliOptions) => {\r\n  switch (PLATFORM) {\r\n    case 'win':\r\n      try {\r\n        // 1. 임시 디렉토리 생성\r\n        const tempDir = `${options.repoName}_temp`;\r\n        execSync(`xcopy \"${options.repoName}\" \"${tempDir}\\\\\" /E /I /H /Y`, execOptions);\r\n\r\n        // 2. 제외할 파일/폴더 삭제\r\n        const excludedItems = options.excluded\r\n          ? options.excluded.split(',')\r\n          : ['node_modules', 'package-lock.json', 'package.json'];\r\n\r\n        for (const item of excludedItems) {\r\n          const itemPath = `${tempDir}/${item}`;\r\n          try {\r\n            if (item.includes('/')) {\r\n              execSync(`rmdir /s /q \"${itemPath}\"`, execOptions);\r\n            } else {\r\n              execSync(`del /q \"${itemPath}\"`, execOptions);\r\n            }\r\n          } catch (err) {\r\n            console.log(`Warning: Could not remove ${item}`);\r\n          }\r\n        }\r\n\r\n        // 3. 압축\r\n        execSync(\r\n          `powershell -Command \"Compress-Archive -Path ${tempDir}/* -DestinationPath ${options.repoName}.zip -Force\"`,\r\n          execOptions\r\n        );\r\n\r\n        // 4. 임시 디렉토리 삭제\r\n        execSync(`rmdir /s /q \"${tempDir}\"`, execOptions);\r\n      } catch (error) {\r\n        console.error('Error during zip operation:', error);\r\n        throw error;\r\n      }\r\n      break;\r\n\r\n    default:\r\n      const excluded = options.excluded\r\n        ? options.excluded\r\n            .split(',')\r\n            .map((item) => `\"${item}\"`)\r\n            .join(' ')\r\n        : '\"*/node_modules/*\" \".git/*\"';\r\n      execSync(`zip -r ${options.repoName}.zip ${options.repoName} -x ${excluded}`, execOptions);\r\n      break;\r\n  }\r\n};\r\n\r\n/**\r\n * 프로젝트 구조 분석\r\n */\r\nconst tree = (options: CliOptions): string => {\r\n  switch (PLATFORM) {\r\n    case 'win':\r\n      const excludedWin = options.excluded\r\n        ? options.excluded.split(',').join('|')\r\n        : 'node_modules|dist|_backups|_drafts|types|docs';\r\n\r\n      try {\r\n        // PowerShell을 사용하여 tree 명령어 실행\r\n        const cmd = `powershell -Command \"& {\r\n          $OutputEncoding = [Console]::OutputEncoding = [Text.Encoding]::UTF8;\r\n          tree /F /A | Select-String -NotMatch '${excludedWin}'\r\n        }\"`;\r\n        console.log('Command: ', cmd);\r\n\r\n        const result = execSync(cmd, {\r\n          encoding: 'utf8',\r\n          stdio: 'pipe',\r\n        });\r\n\r\n        if (result) {\r\n          saveFile('tree.txt', result, { overwrite: true, newFile: false });\r\n        }\r\n\r\n        return result || '';\r\n      } catch (error) {\r\n        console.error('Error executing tree command:', error);\r\n        return '';\r\n      }\r\n\r\n    default:\r\n      const excluded = options.excluded\r\n        ? `\"${options.excluded.split(',').join('|')}\"`\r\n        : '\"node_modules|dist|_backups|_drafts|types|docs\"';\r\n\r\n      const cmd = `tree -I ${excluded} --dirsfirst -L 3`;\r\n      try {\r\n        console.log('Command: ', cmd);\r\n        const result = execSync(cmd, {\r\n          encoding: 'utf8',\r\n          stdio: 'pipe',\r\n        });\r\n\r\n        if (result) {\r\n          saveFile('tree.txt', result, { overwrite: true, newFile: false });\r\n        }\r\n\r\n        return result || '';\r\n      } catch (error) {\r\n        console.error('Error executing tree command:', error);\r\n        return '';\r\n      }\r\n  }\r\n};\r\n\r\n// & Export AREA\r\n// &---------------------------------------------------------------------------\r\nexport { TEMPLATES_ROOT, PLATFORM, exec, exe, execOptions, getParentDir, getCurrentDir, initApp, removeApp, zip, tree };\r\n\r\n// & Test AREA\r\n// &---------------------------------------------------------------------------\r\n// console.log(exec(\"dir /w\"));\r\n// console.log(exec(\"powershell -Command \\\"Get-ChildItem | Format-Wide\\\"\"));\r\n"],"names":["execSync","Path","saveFile","substituteInFile","findGithubAccount","TEMPLATES_ROOT","process","env","DEV_CONFIG_ROOT","PLATFORM","platform","execOptions","encoding","shell","exec","cmd","result","toString","trim","exe","cmds","results","forEach","push","getCurrentDir","replace","getParentDir","dirname","initTsSwcNpm","options","account","userName","parentDir","currentDir","repoName","fullName","email","description","console","log","removeApp","initApp","template","zip","tempDir","excludedItems","excluded","split","item","itemPath","includes","err","error","map","join","tree","excludedWin","stdio","overwrite","newFile"],"mappings":"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"}