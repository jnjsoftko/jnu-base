{"version":3,"sources":["../src/xcli.ts"],"sourcesContent":["#!/usr/bin/env node\n// & IMPORT\n//&============================================================================\nimport yargs from \"yargs\";\nimport { execSync, ExecSyncOptionsWithStringEncoding } from \"child_process\";\nimport Path from \"path\";\nimport { sleep } from \"./basic.js\"\nimport { makeDir, copyDir, loadJson, saveJson, loadFile, saveFile, substituteInFile } from './builtin.js'\nimport { findGithubAccount } from \"./git.js\";\nimport { TEMPLATES_ROOT, PLATFORM, execOptions, initApp, removeApp, zip, tree } from \"./cli.js\";\nimport type { CliOptions } from './types.js';\n\n// & Types AREA\n//&============================================================================\ninterface CommandOptions {\n  exec?: string;\n  userName?: string;\n  template?: string;\n  repoName?: string;\n  description?: string;\n  github?: boolean;\n  excluded?: string;\n}\n\n// & CONSTS / VARIABLES\n//&============================================================================\n\n// * cli options\n// --no-github\nconst argv = yargs\n  .usage(\"Usage: -e <command> -u <userName> -t <template> -n <repoName> -d <description> -g\")\n  .option(\"e\", {\n    alias: \"exec\",\n    describe: \"Execute Command\",\n    type: \"string\",\n    demandOption: true,\n  })\n  .option(\"u\", {\n    alias: \"userName\",\n    default: \"mooninlearn\",\n    describe: \"Name of User\",\n    type: \"string\",\n  })\n  .option(\"t\", {\n    // - template: (node-simple|python|go|flutter|)\n    alias: \"template\",\n    default: \"node\",\n    describe: \"developemnt template(language)\",\n    type: \"string\",\n  })\n  .option(\"n\", {\n    alias: \"repoName\",\n    describe: \"Repository Name(Project Name)\", // project name\n    type: \"string\",\n  })\n  .option(\"d\", {\n    alias: \"description\",\n    describe: \"ProjectDescription\",\n    type: \"string\",\n  })\n  .option(\"g\", {\n    alias: \"github\",\n    default: true,\n    describe: \"Use Github Repository (--no-github: false)\",\n    type: \"boolean\",\n  })\n  .option(\"x\", {\n    alias: \"excluded\",\n    default: \"node_modules/,package-lock.json,package.json\",\n    describe: \"Excluded file/folder types For zip\",\n    type: \"string\",\n  })\n  .parseSync();\n\nconst options: CliOptions = {\n  exec: argv.e as string,\n  userName: argv.u as string,\n  template: argv.t as string,\n  repoName: argv.n as string,\n  description: argv.d,\n  github: argv.g as boolean,\n  excluded: argv.x as string\n};\n\n// & FUNCTIONS\n//&============================================================================\n\n\n// * exec\nswitch (options.exec) {\n  case \"init\":\n    initApp(options);\n    break;\n  case \"remove\":\n    removeApp(options);\n    break;\n  case \"zip\":\n    zip(options);\n    break;\n  case \"tree\":\n    tree(options);\n    break;\n  default:\n    console.log(\"Invalid command\");\n}\n\n"],"names":["yargs","initApp","removeApp","zip","tree","argv","usage","option","alias","describe","type","demandOption","default","parseSync","options","exec","e","userName","u","template","t","repoName","n","description","d","github","g","excluded","x","console","log"],"mappings":";AAGA,OAAOA,WAAW,QAAQ;AAM1B,SAAgDC,OAAO,EAAEC,SAAS,EAAEC,GAAG,EAAEC,IAAI,QAAQ,WAAW;AAoBhG,MAAMC,OAAOL,MACVM,KAAK,CAAC,qFACNC,MAAM,CAAC,KAAK;IACXC,OAAO;IACPC,UAAU;IACVC,MAAM;IACNC,cAAc;AAChB,GACCJ,MAAM,CAAC,KAAK;IACXC,OAAO;IACPI,SAAS;IACTH,UAAU;IACVC,MAAM;AACR,GACCH,MAAM,CAAC,KAAK;IAEXC,OAAO;IACPI,SAAS;IACTH,UAAU;IACVC,MAAM;AACR,GACCH,MAAM,CAAC,KAAK;IACXC,OAAO;IACPC,UAAU;IACVC,MAAM;AACR,GACCH,MAAM,CAAC,KAAK;IACXC,OAAO;IACPC,UAAU;IACVC,MAAM;AACR,GACCH,MAAM,CAAC,KAAK;IACXC,OAAO;IACPI,SAAS;IACTH,UAAU;IACVC,MAAM;AACR,GACCH,MAAM,CAAC,KAAK;IACXC,OAAO;IACPI,SAAS;IACTH,UAAU;IACVC,MAAM;AACR,GACCG,SAAS;AAEZ,MAAMC,UAAsB;IAC1BC,MAAMV,KAAKW,CAAC;IACZC,UAAUZ,KAAKa,CAAC;IAChBC,UAAUd,KAAKe,CAAC;IAChBC,UAAUhB,KAAKiB,CAAC;IAChBC,aAAalB,KAAKmB,CAAC;IACnBC,QAAQpB,KAAKqB,CAAC;IACdC,UAAUtB,KAAKuB,CAAC;AAClB;AAOA,OAAQd,QAAQC,IAAI;IAClB,KAAK;QACHd,QAAQa;QACR;IACF,KAAK;QACHZ,UAAUY;QACV;IACF,KAAK;QACHX,IAAIW;QACJ;IACF,KAAK;QACHV,KAAKU;QACL;IACF;QACEe,QAAQC,GAAG,CAAC;AAChB"}