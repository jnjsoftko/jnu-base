{"version":3,"sources":["../src/xcli.ts"],"sourcesContent":["#!/usr/bin/env node\n// & IMPORT\n//&============================================================================\nimport yargs from \"yargs\";\nimport { execSync, ExecSyncOptionsWithStringEncoding } from \"child_process\";\nimport Path from \"path\";\nimport { sleep } from \"./basic.js\"\nimport { makeDir, copyDir, loadJson, saveJson, loadFile, saveFile, findFiles, deleteFilesInFolder, substituteInFile } from './builtin.js'\nimport { findGithubAccount } from \"./git.js\";\nimport { TEMPLATES_ROOT, PLATFORM, execOptions, initApp, removeApp, zip, tree, del, unzip } from \"./cli.js\";\nimport type { CliOptions } from './types.js';\n\n// & Types AREA\n//&============================================================================\ninterface CommandOptions {\n  exec?: string;\n  userName?: string;\n  template?: string;\n  repoName?: string;\n  description?: string;\n  github?: boolean;\n  excluded?: string;\n}\n\n// & CONSTS / VARIABLES\n//&============================================================================\n\n// * cli options\n// --no-github\nconst argv = yargs\n  .usage(\"Usage: -e <command> -u <userName> -t <template> -n <repoName> -d <description> -g\")\n  .option(\"e\", {\n    alias: \"exec\",\n    describe: \"Execute Command\",\n    type: \"string\",\n    demandOption: true,\n  })\n  .option(\"u\", {\n    alias: \"userName\",\n    default: \"mooninlearn\",\n    describe: \"Name of User\",\n    type: \"string\",\n  })\n  .option(\"t\", {\n    // - template: (node-simple|python|go|flutter|)\n    alias: \"template\",\n    default: \"node\",\n    describe: \"developemnt template(language)\",\n    type: \"string\",\n  })\n  .option(\"n\", {\n    alias: \"repoName\",\n    describe: \"Repository Name(Project Name)\", // project name\n    type: \"string\",\n  })\n  .option(\"d\", {\n    alias: \"description\",\n    describe: \"ProjectDescription\",\n    type: \"string\",\n  })\n  .option(\"g\", {\n    alias: \"github\",\n    default: true,\n    describe: \"Use Github Repository (--no-github: false)\",\n    type: \"boolean\",\n  })\n  .option(\"x\", {\n    alias: \"excluded\",\n    default: \"node_modules/,package-lock.json,package.json\",\n    describe: \"Excluded file/folder types For zip\",\n    type: \"string\",\n  })\n  .parseSync();\n\nconst options: CliOptions = {\n  exec: argv.e as string,\n  userName: argv.u as string,\n  template: argv.t as string,\n  repoName: argv.n as string,\n  description: argv.d,\n  github: argv.g as boolean,\n  excluded: argv.x as string\n};\n\n// & FUNCTIONS\n//&============================================================================\n\n\n// * exec\nswitch (options.exec) {\n  case \"init\":  // 프로젝트 초기화\n    initApp(options); // ex) xcli -e init -t \"node-simple\" -n \"video-stream-app\" -u \"jnjsoftko\" -d \"video stream app\"\n    break;\n  case \"remove\": // 프로젝트 삭제\n    removeApp(options); // ex) xcli -e remove -n \"video-stream-app\" -u \"jnjsoftko\"\n    break;\n  case \"zip\": // 폴더 압축\n    zip(options);  // ex) xcli -e zip -n \"video-stream-app\" -x \"node_modules/,package-lock.json,.next/\"\n    break;\n  case \"tree\": // 폴더 트리\n    tree(options); // ex) xcli -e tree -n \"video-stream-app\"\n    break;\n  case \"del\": // 폴더 삭제\n    deleteFilesInFolder(options.repoName ?? '', options.description ?? options.excluded ?? '', true);  // ex) xcli -e del -n \"/Users/moon/JnJ-soft/Projects/internal/video-stream-app\" -d \"node_modules/,package-lock.json,.next/\"\n    break;\n  case \"unzip\": // 폴더 내에 있는 모든 압축 파일 해제(zip 파일 이름의 폴더에 압축 해제)\n    unzip(options.repoName ?? '');  // ex) xcli -e unzip -n \"video-stream-app\"\n    break;\n  case \"find\": // 폴더 내에 있는 파일 찾기\n    findFiles(options.repoName ?? '', options.description ?? '');  // ex) xcli -e find -n \"video-stream-app\" -p \"*.js\"\n    break;\n  default:\n    console.log(\"Invalid command\");\n}\n\n"],"names":["yargs","findFiles","deleteFilesInFolder","initApp","removeApp","zip","tree","unzip","argv","usage","option","alias","describe","type","demandOption","default","parseSync","options","exec","e","userName","u","template","t","repoName","n","description","d","github","g","excluded","x","console","log"],"mappings":";AAGA,OAAOA,WAAW,QAAQ;AAI1B,SAAmEC,SAAS,EAAEC,mBAAmB,QAA0B,eAAc;AAEzI,SAAgDC,OAAO,EAAEC,SAAS,EAAEC,GAAG,EAAEC,IAAI,EAAOC,KAAK,QAAQ,WAAW;AAoB5G,MAAMC,OAAOR,MACVS,KAAK,CAAC,qFACNC,MAAM,CAAC,KAAK;IACXC,OAAO;IACPC,UAAU;IACVC,MAAM;IACNC,cAAc;AAChB,GACCJ,MAAM,CAAC,KAAK;IACXC,OAAO;IACPI,SAAS;IACTH,UAAU;IACVC,MAAM;AACR,GACCH,MAAM,CAAC,KAAK;IAEXC,OAAO;IACPI,SAAS;IACTH,UAAU;IACVC,MAAM;AACR,GACCH,MAAM,CAAC,KAAK;IACXC,OAAO;IACPC,UAAU;IACVC,MAAM;AACR,GACCH,MAAM,CAAC,KAAK;IACXC,OAAO;IACPC,UAAU;IACVC,MAAM;AACR,GACCH,MAAM,CAAC,KAAK;IACXC,OAAO;IACPI,SAAS;IACTH,UAAU;IACVC,MAAM;AACR,GACCH,MAAM,CAAC,KAAK;IACXC,OAAO;IACPI,SAAS;IACTH,UAAU;IACVC,MAAM;AACR,GACCG,SAAS;AAEZ,MAAMC,UAAsB;IAC1BC,MAAMV,KAAKW,CAAC;IACZC,UAAUZ,KAAKa,CAAC;IAChBC,UAAUd,KAAKe,CAAC;IAChBC,UAAUhB,KAAKiB,CAAC;IAChBC,aAAalB,KAAKmB,CAAC;IACnBC,QAAQpB,KAAKqB,CAAC;IACdC,UAAUtB,KAAKuB,CAAC;AAClB;AAOA,OAAQd,QAAQC,IAAI;IAClB,KAAK;QACHf,QAAQc;QACR;IACF,KAAK;QACHb,UAAUa;QACV;IACF,KAAK;QACHZ,IAAIY;QACJ;IACF,KAAK;QACHX,KAAKW;QACL;IACF,KAAK;QACHf,oBAAoBe,QAAQO,QAAQ,IAAI,IAAIP,QAAQS,WAAW,IAAIT,QAAQa,QAAQ,IAAI,IAAI;QAC3F;IACF,KAAK;QACHvB,MAAMU,QAAQO,QAAQ,IAAI;QAC1B;IACF,KAAK;QACHvB,UAAUgB,QAAQO,QAAQ,IAAI,IAAIP,QAAQS,WAAW,IAAI;QACzD;IACF;QACEM,QAAQC,GAAG,CAAC;AAChB"}