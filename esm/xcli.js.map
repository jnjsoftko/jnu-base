{"version":3,"sources":["../src/xcli.ts"],"sourcesContent":["#!/usr/bin/env node\n// & IMPORT\n//&============================================================================\nimport yargs from \"yargs\";\nimport { execSync, ExecSyncOptionsWithStringEncoding } from \"child_process\";\nimport Path from \"path\";\nimport { sleep } from \"./basic.js\"\nimport { makeDir, copyDir, loadJson, saveJson, loadFile, saveFile, findFiles, deleteFilesInFolder, substituteInFile } from './builtin.js'\nimport { findGithubAccount } from \"./git.js\";\nimport { TEMPLATES_ROOT, PLATFORM, execOptions, initApp, removeApp, zip, tree, unzip } from \"./cli.js\";\nimport type { CliOptions } from './types.js';\n\n\n// & CONSTS / VARIABLES\n//&============================================================================\n\n// * cli options\n// --no-github\nconst argv = yargs\n  .usage(\"Usage: -e <command> -r <required> -o <optional>\")\n  .option(\"e\", {\n    alias: \"exec\",\n    describe: \"Execute Command\",\n    type: \"string\",\n    demandOption: true,\n  })\n  .option(\"r\", {\n    alias: \"requiredParameter\",\n    default: \"\",\n    describe: \"Required Parameter\",\n    type: \"string\",\n  })\n  .option(\"o\", {\n    // - template: (node-simple|python|go|flutter|)\n    alias: \"optionalParameter\",\n    default: \"{}\",\n    describe: \"Optional Parameter\",\n    type: \"string\",\n  })\n  .option(\"s\", {\n    alias: \"saveOption\",\n    default: \"\",\n    describe: \"Save file for result(return)\",\n    type: \"string\",\n  })\n  .parseSync();\n\nconst options: CliOptions = {\n  exec: argv.e as string,\n  requiredParameter: argv.r as string,\n  optionalParameter: argv.o as string,\n  saveOption: argv.s as string\n};\n\n// & SUB FUNCTIONS\n//&============================================================================\nconst requiredParameters = (requiredParameter: string): [string, string] => {\n  const [param1 = '', param2 = ''] = requiredParameter.split(',');\n  return [param1, param2];\n}\n\nconst optionalParameters = (optionalParameter: string) => {\n  return JSON.parse(optionalParameter);\n}\n\nconst saveResult = (result: string, _saveOption: string, defaultOption: string=`options.json||json||1`) => {\n  // * saveOption: (\"path,type\")\n  const defaultOption2 = defaultOption.split('||').slice(1, 3).join('||');\n  const saveOption = !_saveOption ? defaultOption : _saveOption.split('||').length > 1 ? _saveOption : `${_saveOption}||${defaultOption2}`;\n\n  const [path, type, view] = saveOption.split('||');\n  switch (type) {\n    case 'file':\n      saveFile(path, result);\n      if (view) {\n        console.log(`${result}`);\n      }\n      break;\n    case 'json':\n      saveJson(path, result);\n      if (view) {\n        console.log(`${JSON.stringify(result)}`);\n      }\n      break;\n    case 'sqlite':\n      console.log(`saveSqlite: ${path}, ${result}`);\n      // saveSqlite(path, result);\n      if (view) {\n        console.log(`${JSON.stringify(result)}`);\n      }\n      break;\n    default:\n      console.log(`save type is not supported: ${type}`);\n  }\n}\n\n// & MAIN FUNCTIONS\n//&============================================================================\nlet result: any;\nlet saveOption: string;\n\n// * exec\nswitch (options.exec) {\n  case \"init\":  // 프로젝트 초기화\n    result = initApp(options); // ex) xcli -e init -t \"node-simple\" -n \"video-stream-app\" -u \"jnjsoftko\" -d \"video stream app\"\n    saveResult(result, options.saveOption ?? '', `options.json||json||1`);\n    break;\n  case \"remove\": // 프로젝트 삭제\n    removeApp(options); // ex) xcli -e remove -n \"video-stream-app\" -u \"jnjsoftko\"\n    break;\n  case \"zip\": // 폴더 압축\n    const [zipFolder, zipExcluded] = requiredParameters(options.requiredParameter ?? \",\");\n    result = zip(zipFolder, zipExcluded);  // ex) xcli -e zip -n \"video-stream-app\" -x \"node_modules/,package-lock.json,.next/\"\n    saveResult(result, options.saveOption ?? '', `options.json||json||1`);\n    break;\n  case \"tree\": // 폴더 트리\n    const treeResult = tree(options.requiredParameter ?? ''); // ex) xcli -e tree -n \"video-stream-app\"\n    saveResult(result, options.saveOption ?? '', `result.txt||file||1`);\n    break;\n  case \"find\": // 폴더 내에 있는 파일 찾기, xcli -e find -n \".\" -d \"*.js\"\n  const [findFolder, findPattern] = requiredParameters(options.requiredParameter ?? \",\");\n    const files = findFiles(findFolder, findPattern);  // ex) xcli -e find -n \"video-stream-app\" -p \"*.js\"\n    saveResult(result, options.saveOption ?? '', `result.txt||file||1`);\n    break;\n  case \"del\": // 폴더 삭제\n    const [delFolder, delExcluded] = requiredParameters(options.requiredParameter ?? \",\");\n    result = deleteFilesInFolder(delFolder, delExcluded, true) ?? '';  // ex) xcli -e del -n \"/Users/moon/JnJ-soft/Projects/internal/video-stream-app\" -d \"node_modules/,package-lock.json,.next/\"\n    saveResult(result, options.saveOption ?? '', `result.txt||file||1`);\n    break;\n  case \"unzip\": // 폴더 내에 있는 모든 압축 파일 해제(zip 파일 이름의 폴더에 압축 해제)\n    result = unzip(options.requiredParameter ?? '');  // ex) xcli -e unzip -n \"video-stream-app\"\n    saveResult(result, options.saveOption ?? '', `result.txt||file||1`);\n    break;\n  default:\n    console.log(\"Invalid command\");\n}\n\n"],"names":["yargs","saveJson","saveFile","findFiles","deleteFilesInFolder","initApp","removeApp","zip","tree","unzip","argv","usage","option","alias","describe","type","demandOption","default","parseSync","options","exec","e","requiredParameter","r","optionalParameter","o","saveOption","s","requiredParameters","param1","param2","split","optionalParameters","JSON","parse","saveResult","result","_saveOption","defaultOption","defaultOption2","slice","join","length","path","view","console","log","stringify","zipFolder","zipExcluded","treeResult","findFolder","findPattern","files","delFolder","delExcluded"],"mappings":"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"}