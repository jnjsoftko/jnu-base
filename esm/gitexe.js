#!/usr/bin/env node
import{Github as e}from"./github.js";import o from"yargs";import{execSync as i}from"child_process";let p=o.usage("Usage: -u <url> -s <keyword>").option("u",{alias:"userName",default:"mooninlearn",describe:"Name of User",type:"string",demandOption:!0}).option("e",{alias:"exec",default:"createRepo",describe:"exec command createRepo/inintRepo(create+clone+config)/copyRepo(clone+config)/deleteRepo",type:"string",demandOption:!0}).option("n",{alias:"repoName",describe:"NameOfRepository",type:"string",demandOption:!0}).option("d",{alias:"description",describe:"Description For Repository",type:"string"}).option("g",{alias:"github",describe:"Use Github API",type:"boolean",default:!1}).parseSync(),t={userName:p.u,exec:p.e,repoName:p.n,description:p.d,github:p.g},r=new e(t.userName);switch(t.exec){case"initRepo":r.initRepo({name:t.repoName,description:t.description});break;case"createRepo":r.createRepo({name:t.repoName,description:t.description});break;case"copyRepo":r.copyRepo({name:t.repoName,description:t.description});break;case"emptyRepo":r.createRepo({name:t.repoName,description:t.description,auto_init:!1});break;case"pushRepo":let{repoName:a,description:n,userName:s}=t,c=`github -u ${s} -n ${a} -e emptyRepo -d "${n}"`;console.log(c),i(c),r.pushRepo({name:t.repoName,description:t.description});break;case"deleteRepo":r.deleteRepo({name:t.repoName})}