import{execSync as e}from"child_process";import r from"path";import{saveFile as o,substituteInFile as t}from"./builtin";import{findGithubAccount as i}from"./git";let p=`${process.env.DEV_CONFIG_ROOT}/Templates`??"C:/JnJ-soft/Developments/Templates",n="win32"===process.platform?"win":"darwin"===process.platform?"mac":"linux"===process.platform?"linux":process.platform,s=r=>{let o=e(r,{encoding:"utf8"});return o?o.toString().trim():""},m=e=>{let r=[];return e.forEach(e=>r.push(s(e))),r},l={encoding:"utf8",shell:"win32"===process.platform?"cmd.exe":"/bin/sh"},a=()=>r.dirname(e("pwd",l).toString().trim()),d=r=>{let o=i(r.userName??""),s=a();"win"===n?console.log("win"):(e(`cp -r ${p}/ts-swc-npm ${r.repoName}`,l),t(`${r.repoName}/package.json`,{"{{name}}":r.repoName??"","{{author}}":`${o.fullName} <${o.email}>`,"{{description}}":r.description??""}),t(`${r.repoName}/README.md`,{"{{name}}":r.repoName??"","{{author}}":`${o.fullName} <${o.email}>`,"{{github-id}}":r.userName??"","{{description}}":r.description||"","{{parent-dir}}":s}),e(`cd ${r.repoName} && npm install`,l),e(`github -e pushRepo -u ${r.userName} -n ${r.repoName} -d "${r.description}"`,l))},c=r=>{e(`github -e deleteRepo -u ${r.userName} -n ${r.repoName}`,l),e(`rm -rf ${r.repoName}`,l)},u=e=>{switch(e.template){case"node-simple":case"python-pipenv":break;case"ts-swc-npm":d(e)}},$=r=>{if("win"===n){let o=r.excluded?r.excluded.split(",").map(e=>`"${e}"`).join(","):'"*/node_modules/*",".git/*"';e(`powershell -Command "Compress-Archive -Path ${r.repoName} -DestinationPath ${r.repoName}.zip -Exclude ${o}"`,l)}else{let o=r.excluded?r.excluded.split(",").map(e=>`"${e}"`).join(" "):'"*/node_modules/*" ".git/*"';e(`zip -r ${r.repoName}.zip ${r.repoName} -x ${o}`,l)}},f=r=>{if("win"===n)return"";{console.log("options.excluded: ",r.excluded);let t=r.excluded?`"${r.excluded.split(",").join("|")}"`:'"node_modules|dist|_backups|_drafts|types|docs"',i=`tree -I ${t} --dirsfirst -L 3`;try{console.log("Command: ",i);let r=e(i,{encoding:"utf8",stdio:"pipe"});return r&&o("tree.txt",r,{overwrite:!0,newFile:!1}),r||""}catch(e){return console.error("Error executing tree command:",e),""}}};export{p as TEMPLATES_ROOT,n as PLATFORM,s as exec,m as exe,l as execOptions,a as getParentDir,u as initApp,c as removeApp,$ as zip,f as tree};