import{execSync as e}from"child_process";import r from"path";import{saveFile as t,substituteInFile as o}from"./builtin";import{findGithubAccount as i}from"./git";let p=`${process.env.DEV_CONFIG_ROOT}/Templates`??"C:/JnJ-soft/Developments/Templates",n="win32"===process.platform?"win":"darwin"===process.platform?"mac":"linux"===process.platform?"linux":process.platform,s=r=>{let t=e(r,{encoding:"utf8"});return t?t.toString().trim():""},m=e=>{let r=[];return e.forEach(e=>r.push(s(e))),r},a={encoding:"utf8",shell:"win32"===process.platform?"cmd.exe":"/bin/sh"},l=()=>r.dirname(e("pwd",a).toString().trim()),c=r=>{let t=i(r.userName??""),s=l();"win"===n?console.log("win"):(e(`cp -r ${p}/ts-swc-npm ${r.repoName}`,a),o(`${r.repoName}/package.json`,{"{{name}}":r.repoName??"","{{author}}":`${t.fullName} <${t.email}>`,"{{description}}":r.description??""}),o(`${r.repoName}/README.md`,{"{{name}}":r.repoName??"","{{author}}":`${t.fullName} <${t.email}>`,"{{github-id}}":r.userName??"","{{description}}":r.description||"","{{parent-dir}}":s}),e(`cd ${r.repoName} && npm install`,a),e(`github -e pushRepo -u ${r.userName} -n ${r.repoName} -d "${r.description}"`,a))},d=r=>{e(`github -e deleteRepo -u ${r.userName} -n ${r.repoName}`,a),e(`rm -rf ${r.repoName}`,a)},u=e=>{switch(e.template){case"node-simple":case"python-pipenv":break;case"ts-swc-npm":c(e)}},$=r=>{if("win"===n){let t=r.excluded?r.excluded.split(",").map(e=>`"${e}"`).join(","):'"*/node_modules/*",".git/*"';e(`powershell -Command "Compress-Archive -Path ${r.repoName} -DestinationPath ${r.repoName}.zip -Exclude ${t}"`,a)}else{let t=r.excluded?r.excluded.split(",").map(e=>`"${e}"`).join(" "):'"*/node_modules/*" ".git/*"';e(`zip -r ${r.repoName}.zip ${r.repoName} -x ${t}`,a)}},f=r=>{if("win"===n)return"";{let o=r.excluded?`"${r.excluded.split(",").join("|")}"`:'"node_modules|dist|_backups|_drafts|types|docs"',i=`tree -I ${o} --dirsfirst -L 3`;try{let r=e(i,{encoding:"utf8",stdio:"pipe"});return r&&t("tree.txt",r,{overwrite:!0,newFile:!1}),r||""}catch(e){return console.error("Error executing tree command:",e),""}}};export{p as TEMPLATES_ROOT,n as PLATFORM,s as exec,m as exe,a as execOptions,l as getParentDir,u as initApp,d as removeApp,$ as zip,f as tree};