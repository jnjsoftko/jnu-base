{"version":3,"sources":["../src/xgit.ts"],"sourcesContent":["#!/usr/bin/env node\r\nimport { Octokit } from '@octokit/rest';\r\nimport yargs from 'yargs';\r\nimport { execSync } from 'child_process';\r\nimport {\r\n  findGithubAccount,\r\n  createRemoteRepo,\r\n  createRemoteRepoEmpty,\r\n  setLocalConfig,\r\n  cloneRepo,\r\n  initLocalRepo,\r\n  deleteRemoteRepo,\r\n  initRepo,\r\n  copyRepo,\r\n  pushRepo,\r\n  makeRepo,\r\n  removeRepo,\r\n} from './git.js';\r\nimport { getCurrentDir } from './cli.js';\r\n\r\n// & Types AREA\r\n// &---------------------------------------------------------------------------\r\ninterface CommandOptions {\r\n  exec: string; // 'copyRepo' | 'makeRepo' | 'removeRepo'\r\n  userName?: string;\r\n  repoName?: string;\r\n  description?: string;\r\n}\r\n\r\n// & Variables AREA\r\n// &---------------------------------------------------------------------------\r\n// * cli options\r\nconst options = yargs\r\n  .usage('Usage: -u <url> -s <keyword>')\r\n  .option('e', {\r\n    alias: 'exec',\r\n    // choices: ['copyRepo', 'makeRepo', 'removeRepo'] as const,\r\n    default: 'copyRepo',\r\n    describe: 'exec command copyRepo(clone+local config)/makeRepo(create remote+push)/removeRepo(delete remote+local)',\r\n    type: 'string',\r\n    demandOption: true,\r\n  })\r\n  .option('u', {\r\n    alias: 'userName',\r\n    default: 'mooninlearn',\r\n    describe: 'Name of User',\r\n    type: 'string',\r\n  })\r\n  .option('n', {\r\n    alias: 'repoName',\r\n    describe: 'NameOfRepository',\r\n    type: 'string',\r\n  })\r\n  .option('d', {\r\n    alias: 'description',\r\n    describe: 'Description For Repository',\r\n    type: 'string',\r\n  }).argv as unknown as CommandOptions;\r\n\r\n// * temp Function\r\nfunction getLocalPath(repoName: string) {\r\n  let localPath = getCurrentDir();\r\n  const lastSlug = localPath.split('/').pop();\r\n  if (lastSlug !== repoName) {\r\n    localPath += `/${repoName}`;\r\n  }\r\n  return localPath;\r\n}\r\n\r\n// * github account setup\r\nconst account = findGithubAccount(options.userName ?? '');\r\naccount.userName = options.userName ?? '';\r\nconsole.log(`#### git account: ${JSON.stringify(account)}`);\r\nconst octokit = new Octokit({ auth: account.token });\r\nconst localPath = getLocalPath(options.repoName ?? '') ?? '';\r\n\r\n// * exec\r\nswitch (options.exec) {\r\n  case 'createRemoteRepo':\r\n    createRemoteRepo(octokit, {\r\n      name: options.repoName ?? '',\r\n      description: options.description ?? '',\r\n    });\r\n    break;\r\n  case 'createRemoteRepoEmpty':\r\n    createRemoteRepoEmpty(octokit, {\r\n      name: options.repoName ?? '',\r\n      description: options.description ?? '',\r\n    });\r\n    break;\r\n  case 'deleteRemoteRepo':\r\n    deleteRemoteRepo(\r\n      octokit,\r\n      {\r\n        name: options.repoName ?? '',\r\n      },\r\n      account\r\n    );\r\n    break;\r\n  case 'setLocalConfig':\r\n    setLocalConfig(\r\n      {\r\n        name: options.repoName ?? '',\r\n        description: options.description ?? '',\r\n      },\r\n      account,\r\n      localPath\r\n    );\r\n    break;\r\n  case 'cloneRepo':\r\n    cloneRepo(\r\n      {\r\n        name: options.repoName ?? '',\r\n        description: options.description ?? '',\r\n      },\r\n      account,\r\n      localPath\r\n    );\r\n    break;\r\n  case 'initLocalRepo':\r\n    initLocalRepo(\r\n      {\r\n        name: options.repoName ?? '',\r\n        description: options.description ?? '',\r\n      },\r\n      account,\r\n      localPath\r\n    );\r\n    break;\r\n  case 'initRepo':\r\n    console.log('====initRepo');\r\n    initRepo(\r\n      octokit,\r\n      {\r\n        name: options.repoName ?? '',\r\n        description: options.description ?? '',\r\n      },\r\n      account,\r\n      localPath\r\n    );\r\n    break;\r\n  case 'pushRepo':\r\n    pushRepo(\r\n      {\r\n        name: options.repoName ?? '',\r\n        description: options.description ?? '',\r\n      },\r\n      account,\r\n      localPath\r\n    );\r\n    break;\r\n  case 'copyRepo':\r\n    copyRepo(\r\n      {\r\n        name: options.repoName ?? '',\r\n        description: options.description ?? 'description',\r\n      },\r\n      account,\r\n      localPath\r\n    );\r\n    break;\r\n  case 'makeRepo':\r\n    makeRepo(\r\n      octokit,\r\n      {\r\n        name: options.repoName ?? '',\r\n        description: options.description ?? '',\r\n      },\r\n      account,\r\n      localPath\r\n    );\r\n    break;\r\n  case 'removeRepo':\r\n    removeRepo(octokit, { name: options.repoName ?? '' }, account, localPath);\r\n    break;\r\n}\r\n\r\n// github -u mooninlearn -n udemy-test -e makeRepo -d \"test makeRepo\"\r\n"],"names":["Octokit","yargs","findGithubAccount","createRemoteRepo","createRemoteRepoEmpty","setLocalConfig","cloneRepo","initLocalRepo","deleteRemoteRepo","initRepo","copyRepo","pushRepo","makeRepo","removeRepo","getCurrentDir","options","usage","option","alias","default","describe","type","demandOption","argv","getLocalPath","repoName","localPath","lastSlug","split","pop","account","userName","console","log","JSON","stringify","octokit","auth","token","exec","name","description"],"mappings":"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"}