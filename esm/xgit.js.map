{"version":3,"sources":["../src/xgit.ts"],"sourcesContent":["#!/usr/bin/env node\nimport { Octokit } from '@octokit/rest';\nimport yargs from 'yargs';\nimport { execSync } from 'child_process';\nimport {\n  findGithubAccount,\n  createRemoteRepo,\n  createRemoteRepoEmpty,\n  setLocalConfig,\n  cloneRepo,\n  initLocalRepo,\n  deleteRemoteRepo,\n  initRepo,\n  copyRepo,\n  pushRepo,\n  makeRepo,\n  removeRepo,\n} from './git.js';\nimport { getCurrentDir } from './cli.js';\n\n// & Types AREA\n// &---------------------------------------------------------------------------\ninterface CommandOptions {\n  exec: string; // 'copyRepo' | 'makeRepo' | 'removeRepo'\n  userName?: string;\n  repoName?: string;\n  description?: string;\n}\n\n// & Variables AREA\n// &---------------------------------------------------------------------------\n// * cli options\nconst options = yargs\n  .usage('Usage: -u <url> -s <keyword>')\n  .option('e', {\n    alias: 'exec',\n    // choices: ['copyRepo', 'makeRepo', 'removeRepo'] as const,\n    default: 'copyRepo',\n    describe: 'exec command copyRepo(clone+local config)/makeRepo(create remote+push)/removeRepo(delete remote+local)',\n    type: 'string',\n    demandOption: true,\n  })\n  .option('u', {\n    alias: 'userName',\n    default: 'mooninlearn',\n    describe: 'Name of User',\n    type: 'string',\n  })\n  .option('n', {\n    alias: 'repoName',\n    describe: 'NameOfRepository',\n    type: 'string',\n  })\n  .option('d', {\n    alias: 'description',\n    describe: 'Description For Repository',\n    type: 'string',\n  }).argv as unknown as CommandOptions;\n\n// * temp Function\nfunction getLocalPath(repoName: string) {\n  let localPath = getCurrentDir();\n  const lastSlug = localPath.split('/').pop();\n  if (lastSlug !== repoName) {\n    localPath += `/${repoName}`;\n  }\n  return localPath;\n}\n\n// * github account setup\nconst account = findGithubAccount(options.userName ?? '');\naccount.userName = options.userName ?? '';\nconsole.log(`#### git account: ${JSON.stringify(account)}`);\nconst octokit = new Octokit({ auth: account.token });\nconst localPath = getLocalPath(options.repoName ?? '') ?? '';\n\n// * exec\nswitch (options.exec) {\n  case 'createRemoteRepo':\n    createRemoteRepo(octokit, {\n      name: options.repoName ?? '',\n      description: options.description ?? '',\n    });\n    break;\n  case 'createRemoteRepoEmpty':\n    createRemoteRepoEmpty(octokit, {\n      name: options.repoName ?? '',\n      description: options.description ?? '',\n    });\n    break;\n  case 'deleteRemoteRepo':\n    deleteRemoteRepo(\n      octokit,\n      {\n        name: options.repoName ?? '',\n      },\n      account\n    );\n    break;\n  case 'setLocalConfig':\n    setLocalConfig(\n      {\n        name: options.repoName ?? '',\n        description: options.description ?? '',\n      },\n      account,\n      localPath\n    );\n    break;\n  case 'cloneRepo':\n    cloneRepo(\n      {\n        name: options.repoName ?? '',\n        description: options.description ?? '',\n      },\n      account,\n      localPath\n    );\n    break;\n  case 'initLocalRepo':\n    initLocalRepo(\n      {\n        name: options.repoName ?? '',\n        description: options.description ?? '',\n      },\n      account,\n      localPath\n    );\n    break;\n  case 'initRepo':\n    console.log('====initRepo');\n    initRepo(\n      octokit,\n      {\n        name: options.repoName ?? '',\n        description: options.description ?? '',\n      },\n      account,\n      localPath\n    );\n    break;\n  case 'pushRepo':\n    pushRepo(\n      {\n        name: options.repoName ?? '',\n        description: options.description ?? '',\n      },\n      account,\n      localPath\n    );\n    break;\n  case 'copyRepo':\n    copyRepo(\n      {\n        name: options.repoName ?? '',\n        description: options.description ?? 'description',\n      },\n      account,\n      localPath\n    );\n    break;\n  case 'makeRepo':\n    makeRepo(\n      octokit,\n      {\n        name: options.repoName ?? '',\n        description: options.description ?? '',\n      },\n      account,\n      localPath\n    );\n    break;\n  case 'removeRepo':\n    removeRepo(octokit, { name: options.repoName ?? '' }, account, localPath);\n    break;\n}\n\n// github -u mooninlearn -n udemy-test -e makeRepo -d \"test makeRepo\"\n"],"names":["Octokit","yargs","findGithubAccount","createRemoteRepo","createRemoteRepoEmpty","setLocalConfig","cloneRepo","initLocalRepo","deleteRemoteRepo","initRepo","copyRepo","pushRepo","makeRepo","removeRepo","getCurrentDir","options","usage","option","alias","default","describe","type","demandOption","argv","getLocalPath","repoName","localPath","lastSlug","split","pop","account","userName","console","log","JSON","stringify","octokit","auth","token","exec","name","description"],"mappings":"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"}