import*as e from"fs";import r from"path";let t=e=>e.replace(/^\uFEFF/gm,"").replace(/^\u00BB\u00BF/gm,"").replace(/\r\n/g,"\n"),i=e=>(e=e.replace(/\\/g,"/")).endsWith("/")?e.slice(0,-1):e,n=e=>(e.startsWith(".")&&(e=r.join(process.cwd(),e)),i(e)),s=e=>e.normalize("NFKC"),c=e=>e?(e=s(e)).replace(/\[/g,"(").replace(/\]/g,")").replace(/[^\uAC00-\uD7A3a-zA-Z0-9_\(\)\<\>,\s]/g,"").replace(/\s+/g," ").trim():"",l=(r,i="utf8")=>{try{return t(e.readFileSync(n(r),{encoding:i}))}catch{return""}},a=(r,i="utf8")=>{try{return JSON.parse(t(e.readFileSync(n(r),{encoding:i})))}catch{return{}}},o=(t,i="",{encoding:s="utf-8",overwrite:c=!0,newFile:l=!0}={})=>{if(t=n(t),l&&e.existsSync(t)){let i=r.dirname(t),n=r.extname(t),s=r.basename(t,n),c=1;for(;e.existsSync(t);)t=r.join(i,`${s}(${c})${n}`),c++}e.mkdirSync(r.dirname(t),{recursive:!0}),c?e.writeFileSync(t,i,s):e.appendFileSync(t,i,s)},p=(e,r={},{indent:t=2,overwrite:i=!0,newFile:s=!1}={})=>{o(n(e),JSON.stringify(r,null,t),{overwrite:i,newFile:s})},u=r=>{e.mkdirSync(n(r),{recursive:!0})},y=(r,t,i=!0)=>{e.cpSync(n(r),n(t),{recursive:i})},d=(t,i="",n=[])=>{if(!e.existsSync(t))return[];let s=e.readdirSync(t);return n=n||[],s.forEach(function(s){e.statSync(t+"/"+s).isDirectory()?n=d(t+"/"+s,i,n):(i instanceof RegExp?i:new RegExp(i.replace(/\*/g,".*"))).test(s)&&n.push(r.join(t,"/",s))}),n};function f(t,n=""){let s=[];for(let c of e.readdirSync(t)){let l=r.join(t,c),a=n instanceof RegExp?n:new RegExp(n.replace(/\*/g,".*"));e.statSync(l).isDirectory()&&a.test(c)&&s.push(i(l))}return s}let m=r=>e.existsSync(r),S=r=>e.existsSync(r),g=r=>e.existsSync(r),F=(r,t,n,s)=>{r=i(r),t=i(t),e.rename(`${r}/${n}`,`${t}/${s}`,e=>console.log(e))},x=(r,t,n,s)=>{r=i(r),t=i(t),e.existsSync(t)||e.mkdirSync(t,{recursive:!0});for(let i=0;i<n.length;i++){let c=n[i],l=s[i];e.rename(`${r}/${c}`,`${t}/${l}`,e=>console.log(e))}},h=(e,r)=>{let t=l(e);for(let[e,i]of Object.entries(r))t=t.replace(RegExp(e,"g"),i);o(e,t,{overwrite:!0,newFile:!1})};export{i as slashedFolder,n as setPath,c as sanitizeName,l as loadFile,a as loadJson,o as saveFile,p as saveJson,u as makeDir,y as copyDir,d as findFiles,f as findFolders,m as existsFolder,S as existsFile,g as exists,F as moveFile,x as moveFiles,h as substituteInFile};