#!/usr/bin/env node
import{findGithubAccount as e,createRepo as o,initRepo as r,deleteRepo as a,copyRepo as i,makeRepo as t,removeRepo as p}from"./git.js";import{Octokit as s}from"@octokit/rest";import n from"yargs";let m=n.usage("Usage: -u <url> -s <keyword>").option("e",{alias:"exec",default:"copyRepo",describe:"exec command copyRepo(clone+local config)/makeRepo(create remote+push)/removeRepo(delete remote+local)",type:"string",demandOption:!0}).option("u",{alias:"userName",default:"mooninlearn",describe:"Name of User",type:"string"}).option("n",{alias:"repoName",describe:"NameOfRepository",type:"string"}).option("d",{alias:"description",describe:"Description For Repository",type:"string"}).argv,c=e(m.userName??""),d=new s({auth:c.token});switch(m.exec){case"initRepo":r({name:m.repoName??"",description:m.description??""},m.userName??"",c,d);break;case"createRepo":o(d,{name:m.repoName??"",description:m.description??""});break;case"emptyRepo":o(d,{name:m.repoName??"",description:m.description??"",auto_init:!1,license_template:void 0});break;case"deleteRepo":a(d,m.userName??"",{name:m.repoName??""});break;case"copyRepo":i({name:m.repoName??"",description:m.description??""},m.userName??"",c);break;case"makeRepo":t({name:m.repoName??"",description:m.description??""},m.userName??"",c,d);break;case"removeRepo":p(d,m.userName??"",{name:m.repoName??""})}