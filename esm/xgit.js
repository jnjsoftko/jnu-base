#!/usr/bin/env node
import{Github as e}from"./github";import o from"yargs";import{execSync as p}from"child_process";let i=o.usage("Usage: -u <url> -s <keyword>").option("u",{alias:"userName",default:"mooninlearn",describe:"Name of User",type:"string",demandOption:!0}).option("e",{alias:"exec",choices:["createRepo","initRepo","copyRepo","emptyRepo","pushRepo","deleteRepo"],default:"createRepo",describe:"exec command createRepo/inintRepo(create+clone+config)/copyRepo(clone+config)/deleteRepo",type:"string",demandOption:!0}).option("n",{alias:"repoName",describe:"NameOfRepository",type:"string",demandOption:!0}).option("d",{alias:"description",describe:"Description For Repository",type:"string"}).argv,t=new e(i.userName);switch(i.exec){case"initRepo":t.initRepo({name:i.repoName,description:i.description});break;case"createRepo":t.createRepo({name:i.repoName,description:i.description});break;case"copyRepo":t.copyRepo({name:i.repoName,description:i.description});break;case"emptyRepo":t.createRepo({name:i.repoName,description:i.description,auto_init:!1,license_template:void 0});break;case"pushRepo":let{repoName:r,description:a,userName:n}=i,s=`github -u ${n} -n ${r} -e emptyRepo -d "${a}"`;console.log(s),p(s),t.pushRepo({name:i.repoName,description:i.description});break;case"deleteRepo":t.deleteRepo({name:i.repoName})}